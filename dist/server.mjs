import Cs from'ip';import m from'picocolors';import Ts from'cookie-parser';import Os from'cors';import Dr from'dotenv';import Pe,{urlencoded}from'express';import _s from'helmet';import he from'passport';import {Strategy}from'passport-google-oauth20';import $e from'bcryptjs';import {relations,and,eq,desc,inArray}from'drizzle-orm';import {StatusCodes}from'http-status-codes';import {drizzle}from'drizzle-orm/node-postgres';import qr from'pg';import {timestamp,text,pgEnum,pgTable,serial,integer,unique,varchar,boolean,json}from'drizzle-orm/pg-core';import {Strategy as Strategy$1}from'passport-local';import {z as z$1,ZodError}from'zod';import ms from'multer';import {v2}from'cloudinary';import {doubleCsrf}from'csrf-csrf';import ys from'express-rate-limit';import vs,{Store}from'express-session';import {readFileSync}from'fs';import {join}from'path';var gr=Object.defineProperty;var re=(r,e)=>{for(var s in e)gr(r,s,{get:e[s],enumerable:true});};var ue={};re(ue,{ROLE_TYPE:()=>De,TOKEN_TYPE:()=>ke,accounts:()=>N,accountsRelations:()=>yr,sessions:()=>v,sessionsRelations:()=>vr,users:()=>d,usersRelations:()=>Er,verificationToken:()=>w});var O={createdAt:timestamp("created_at",{withTimezone:true}).notNull().defaultNow(),updatedAt:timestamp("updated_at",{withTimezone:true}).notNull().defaultNow().$onUpdate(()=>new Date)};({metaTitle:text("meta_title").notNull().default("SEO Title"),metaDescription:text("meta_description").notNull().default("SEO Description"),metaKeywords:text("meta_keywords").notNull().default("SEO Keywords")});var Ie={enumValues:["ADMIN","SUPERVISOR","MEMBER"]},I={PASSWORD_RESET:"PASSWORD_RESET",enumValues:["PASSWORD_RESET","EMAIL_VERIFICATION","LOGIN_OTP"]};var De=pgEnum("role_type",Ie.enumValues),ke=pgEnum("token_type",I.enumValues),d=pgTable("users",{id:serial("id").primaryKey(),name:text("name"),username:text("username").unique(),email:text("email").unique(),password:text("password"),emailVerified:timestamp("email_verified",{withTimezone:true}),image:text("image"),role:De("role").notNull().default("MEMBER"),...O}),N=pgTable("accounts",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().references(()=>d.id,{onDelete:"cascade"}),type:text("type").notNull(),provider:text("provider").notNull(),providerAccountId:text("provider_account_id").notNull(),refreshToken:text("refresh_token"),accessToken:text("access_token"),expiresAt:integer("expires_at"),tokenType:text("token_type"),scope:text("scope"),idToken:text("id_token"),sessionState:text("session_state"),...O}),v=pgTable("sessions",{id:serial("id").primaryKey(),sessionId:text("session_id").notNull().unique(),sessionCookie:text("session_cookie").unique(),userId:integer("user_id").references(()=>d.id,{onDelete:"cascade"}),expires:timestamp("expires",{withTimezone:true}).notNull(),...O}),w=pgTable("verification_token",{id:serial("id").primaryKey(),identifier:text("identifier").notNull(),token:text("token").notNull(),tokenType:ke("token_type").notNull(),expires:timestamp("expires",{withTimezone:true}).notNull(),...O},r=>[unique("verification_token_unique").on(r.identifier,r.tokenType)]),yr=relations(N,({one:r})=>({user:r(d,{fields:[N.userId],references:[d.id]})})),Er=relations(d,({many:r})=>({accounts:r(N),sessions:r(v)})),vr=relations(v,({one:r})=>({user:r(d,{fields:[v.userId],references:[d.id]})}));var de={};re(de,{email:()=>Or});var Or=pgTable("email",{id:serial("id").primaryKey(),emailConfigName:varchar("email_config_name",{length:255}).notNull().unique(),host:varchar("host",{length:255}).notNull(),port:varchar("port",{length:255}).notNull(),username:varchar("username",{length:255}).notNull(),password:varchar("password",{length:255}).notNull(),secure:boolean("secure").notNull().default(false),fromName:varchar("from_name",{length:255}).notNull(),fromEmail:varchar("from_email",{length:255}).notNull(),...O});var fe={};re(fe,{emailTemplates:()=>me});var me=pgTable("email_templates",{id:serial("id").primaryKey(),name:varchar("name",{length:255}).unique().notNull(),subject:text("subject").notNull(),html:text("html").notNull(),...O});var Re={};re(Re,{media:()=>S});var S=pgTable("media",{id:serial("id").primaryKey(),src:text("src").notNull().unique(),alt:text("alt").notNull(),size:integer("file_size").notNull(),mimeType:varchar("mime_type",{length:100}).notNull(),additionalData:json("additional_data"),...O});var Cr={...ue,...de,...fe,...Re},Fe=Cr;Dr.config();var Mr=new qr.Pool({connectionString:process.env.DATABASE_URL}),Fr=drizzle(Mr,{schema:Fe}),M=Fr;var x=class{db;currentTx=null;constructor(){this.db=M;}setTransaction(e){return this.currentTx=e,this}clearTransaction(){return this.currentTx=null,this}getDb(){return this.currentTx||this.db}};var ge=class{clientDomain=null;serverDomain=null;setClientDomain(e){this.clientDomain=e;}getClientDomain(){return this.clientDomain}setServerDomain(e){this.serverDomain=e;}getServerDomain(){return this.serverDomain}},Lr=new ge,z=Lr;var h=class{static detectInputType(e){return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)?"EMAIL":"USERNAME"}static OTPGenerator(e=4){if(e<4)throw new Error("The OTP length must be at least 4.");let s=Math.pow(10,e-1),t=Math.pow(10,e)-1;return Math.floor(Math.random()*(t-s+1)+s)}static OTPExpiry(e=5){let s=new Date;return new Date(s.getTime()+e*6e4)}static sameSiteCookieConfig(){try{let e=T=>/^(\d{1,3}\.){3}\d{1,3}$/.test(T);if(process.env.COOKIE_SETTINGS==="locally")return {sameSite:"lax",secure:!1};if(process.env.COOKIE_SETTINGS==="globally"&&process.env.COOKIE_DOMAIN){let T=process.env.COOKIE_DOMAIN,k=T.startsWith(".")?T.substring(1):T;return e(k)?{sameSite:process.env.COOKIE_SAME_SITE,secure:!0,domain:T}:{sameSite:process.env.COOKIE_SAME_SITE,secure:!0,domain:T}}let s=z.getClientDomain(),t=z.getServerDomain()||process.env.API_URL;if(!s)return {sameSite:"none",secure:!0};let o=new URL(s),n=new URL(t),a=n.protocol==="https:",f=T=>T.split(":")[0],u=T=>{let k=f(T);if(k==="localhost"||e(k))return k;let Ae=k.split(".");return Ae.length<2?k:Ae.slice(-2).join(".")},E=u(o.hostname),Rr=u(n.hostname),ee,H;return f(o.hostname)===f(n.hostname)?(ee=f(n.hostname),H="lax"):E===Rr&&!e(E)&&E!=="localhost"?(ee="."+E,H="lax"):(ee=f(n.hostname),H="none"),H==="none"&&(a=!0),{sameSite:H,secure:a,domain:ee}}catch{return {sameSite:"lax",secure:true}}}};var $r=r=>r!==null&&typeof r=="object"&&"status"in r&&typeof r.status=="number"&&"message"in r&&typeof r.message=="string",Le=new Set([StatusCodes.NO_CONTENT]),i=class{static async createResponse(e,s,t,o){return Le.has(e)?Promise.resolve({status:e,message:s,data:void 0}):Promise.resolve({status:e,message:s,data:t,pagination:o})}static async createRejectResponse(e,s){return Promise.reject({status:e,message:s})}static createErrorResponse(e){return console.error("Error:",e instanceof Error?e.message:e),$r(e)?Promise.reject(e):Promise.reject({status:StatusCodes.INTERNAL_SERVER_ERROR,message:"Internal Server Error"})}},b=class{response;constructor(e){this.response=e;}successResponse(e,s,t){return this.sendResponse({status:StatusCodes.OK,message:e,data:s,pagination:t})}unauthorizedResponse(e){return this.sendResponse({status:StatusCodes.UNAUTHORIZED,message:e})}forbiddenResponse(e){return this.sendResponse({status:StatusCodes.FORBIDDEN,message:e})}badResponse(e){return this.sendResponse({status:StatusCodes.BAD_REQUEST,message:e})}internalServerError(e="Internal Server Error"){return this.sendResponse({status:StatusCodes.INTERNAL_SERVER_ERROR,message:e})}sendResponse({status:e,message:s,data:t,pagination:o}){if(Le.has(e))return this.response.status(e).json({});let n={status:e,message:s};return t!==void 0&&(n.data=t),o&&(n.pagination=o),this.response.status(e).json(n)}};var U=class extends x{async createUser(e){try{e.username&&await this.duplicateUserCheckByUsername(e.username),e.email&&await this.duplicateUserCheckByEmail(e.email);let s=await this.getDb().insert(d).values(e).returning(),{password:t,...o}=s[0];return i.createResponse(StatusCodes.CREATED,"User created successfully",o)}catch(s){return i.createErrorResponse(s)}}async createGoogleAccount(e,s,t){try{let o=await this.db.insert(N).values({userId:e,type:"oauth",provider:"google",providerAccountId:s.id,accessToken:t,refreshToken:null,expiresAt:6048e5,tokenType:"access_token",scope:"profile",idToken:s.id,sessionState:null}).returning();return i.createResponse(StatusCodes.CREATED,"Google account created successfully",o[0])}catch(o){return i.createErrorResponse(o)}}async createUserFromGoogle(e,s){try{let t=await this.db.query.users.findFirst({where:eq(d.email,e._json.email),with:{accounts:{where:and(eq(N.providerAccountId,e.id),eq(N.provider,"google"))}}});if(t)if(t.accounts.length>0){await this.db.update(N).set({accessToken:s}).where(eq(N.providerAccountId,e.id)),t.emailVerified||await this.accountVerification(t.id);let{accounts:n,...a}=t;return i.createResponse(StatusCodes.OK,"Google account updated successfully",a)}else {await this.createGoogleAccount(t.id,e,s);let{accounts:n,...a}=t;return i.createResponse(StatusCodes.CREATED,"Google account created successfully",a)}let o=await this.createUser({name:e._json.name,email:e._json.email,username:e._json.email.split("@")[0],password:null,emailVerified:new Date,image:e._json.picture,role:"MEMBER"});return await this.createGoogleAccount(o.data?.id,e,s),i.createResponse(StatusCodes.CREATED,"User created successfully",o.data)}catch(t){return i.createErrorResponse(t)}}async findUserByUsernameOrEmail(e){try{let s=h.detectInputType(e),t={};return s==="EMAIL"?(t=(await this.findUserByEmail(e,!0)).data,i.createResponse(StatusCodes.OK,"User found successfully",t)):s==="USERNAME"?(t=(await this.findUserByUsername(e,!0)).data,i.createResponse(StatusCodes.OK,"User found successfully",t)):i.createResponse(StatusCodes.BAD_REQUEST,"Invalid input type",t)}catch(s){return i.createErrorResponse(s)}}async findUserById(e,s=false){try{let t=await this.getDb().query.users.findFirst({where:eq(d.id,e)});if(!t)return i.createRejectResponse(StatusCodes.NOT_FOUND,"User not found");if(s)return i.createResponse(StatusCodes.OK,"User found successfully",t);let{password:o,...n}=t;return i.createResponse(StatusCodes.OK,"User found successfully",n)}catch(t){return i.createErrorResponse(t)}}async findUserByEmail(e,s=false){try{let t=await this.getDb().query.users.findFirst({where:eq(d.email,e)});if(!t)return i.createRejectResponse(StatusCodes.NOT_FOUND,"User not found");if(s)return i.createResponse(StatusCodes.OK,"User found successfully",t);let{password:o,...n}=t;return i.createResponse(StatusCodes.OK,"User found successfully",n)}catch(t){return i.createErrorResponse(t)}}async findUserByUsername(e,s=false){try{let t=await this.getDb().query.users.findFirst({where:eq(d.username,e)});if(!t)return i.createRejectResponse(StatusCodes.NOT_FOUND,"User not found");if(s)return i.createResponse(StatusCodes.OK,"User found successfully",t);let{password:o,...n}=t;return i.createResponse(StatusCodes.OK,"User found successfully",n)}catch(t){return i.createErrorResponse(t)}}async duplicateUserCheckByEmail(e){try{return await this.getDb().query.users.findFirst({where:eq(d.email,e)})?i.createRejectResponse(StatusCodes.CONFLICT,"User already exists"):i.createResponse(StatusCodes.OK,"User does not exist",!1)}catch(s){return i.createErrorResponse(s)}}async duplicateUserCheckByUsername(e){try{return await this.getDb().query.users.findFirst({where:eq(d.username,e)})?i.createRejectResponse(StatusCodes.CONFLICT,"User already exists"):i.createResponse(StatusCodes.OK,"User does not exist",!1)}catch(s){return i.createErrorResponse(s)}}async changePassword(e,s){try{let t=await $e.hash(s,10);return await this.getDb().update(d).set({password:t}).where(eq(d.id,e)),i.createResponse(StatusCodes.OK,"Password changed successfully",!0)}catch(t){return i.createErrorResponse(t)}}async passwordChecker(e,s){try{if(!s)return i.createRejectResponse(StatusCodes.NOT_FOUND,"User account has no password");let t=await $e.compare(e,s);return t?i.createResponse(StatusCodes.OK,"Password checked",t):i.createRejectResponse(StatusCodes.NOT_FOUND,"Password incorrect")}catch(t){return i.createErrorResponse(t)}}async accountVerification(e){try{return await this.getDb().update(d).set({emailVerified:new Date}).where(eq(d.id,e)),i.createResponse(StatusCodes.OK,"User verified",!0)}catch(s){return i.createErrorResponse(s)}}async checkAccountVerification(e){try{return (await this.findUserById(e)).data?.emailVerified?i.createResponse(StatusCodes.OK,"User is verified",!0):i.createRejectResponse(StatusCodes.NOT_FOUND,"User is not verified")}catch(s){return i.createErrorResponse(s)}}};var je=new U;he.serializeUser(async(r,e)=>{try{e(null,r.id);}catch(s){e(s,false);}});he.deserializeUser(async(r,e)=>{try{let s=await je.findUserById(r);e(null,s.data);}catch(s){e(s,false);}});he.use(new Strategy({clientID:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,callbackURL:process.env.GOOGLE_CALLBACK_URL},async(r,e,s,t)=>{try{let o=await je.createUserFromGoogle(s,r);t(null,o.data);}catch(o){console.error("Google strategy error:",o),t(o,false);}}));var oe=new U;he.serializeUser((r,e)=>{e(null,r.id);});he.deserializeUser(async(r,e)=>{try{let s=await oe.findUserById(r,!1);s.data?e(null,s.data):e(new Error("User not found"),null);}catch(s){e(s,null);}});he.use(new Strategy$1({usernameField:"usernameOrEmail",passwordField:"password"},async(r,e,s)=>{try{let t=await oe.findUserByUsernameOrEmail(r);if(!t.data)return s(null,!1,{message:"Invalid credentials"});if(!(await oe.passwordChecker(e,t.data.password)).data)return s(null,!1,{message:"Invalid credentials"});let n=await oe.findUserById(t.data.id,!1);return s(null,n.data)}catch(t){return s(t)}}));function Ee(r){r.get("/",(e,s)=>{s.status(200).send(`
				<!DOCTYPE html>
				<html lang="en">
				<head>
						<meta charset="UTF-8">
						<meta name="viewport" content="width=device-width, initial-scale=1.0">
						<title>Welcome Page</title>
						<style>
								body {
										font-family: Arial, sans-serif;
										background-color: #f4f4f9;
										color: #333;
										margin: 0;
										padding: 0;
										display: flex;
										justify-content: center;
										align-items: center;
										height: 100vh;
								}
								.container {
										text-align: center;
										background: white;
										padding: 20px;
										border-radius: 10px;
										box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
								}
								h1 {
										color: #4CAF50;
								}
								p {
										font-size: 1.2em;
								}
						</style>
				</head>
				<body>
						<div class="container">
								<h1>Welcome to the Application</h1>
								<p>All the API routes start with <code>/api</code></p>
								<p>For example: <code>/api/auth/login</code></p>
						</div>
				</body>
				</html>
    `);});}var c={error:{required:{fieldIsRequired:r=>`${r} is required.`},limit:{stringMin:(r,e)=>`${r} must be at least ${e} characters.`,stringMax:(r,e)=>`${r} must not exceed ${e} characters.`,arrayMin:(r,e)=>`${r} must have at least ${e} items.`,arrayMax:(r,e)=>`${r} must not exceed ${e} items.`,numberMin:(r,e)=>`${r} must be at least ${e}.`,numberMax:(r,e)=>`${r} must not exceed ${e}.`,fileSize:(r,e)=>`${r} must not exceed ${e}.`},invalid:{invalidString:r=>`${r} must be a string.`,invalidEmail:r=>`${r} must be a valid email address.`,invalidNumber:r=>`${r} must be a number.`,invalidBoolean:r=>`${r} must be a boolean.`,invalidDate:r=>`${r} must be a date.`,invalidArray:r=>`${r} must be an array.`,invalidObject:r=>`${r} must be an object.`,invalidEnum:(r,e)=>`${r} must be one of the following values: ${e.join(", ")}.`,invalidUnion:r=>`${r} must be one of the specified types.`,invalidIntersection:r=>`${r} must be a combination of the specified types.`,invalidTuple:r=>`${r} must be a tuple.`,invalidRecord:r=>`${r} must be a record.`,invalidLiteral:(r,e)=>`${r} must be the literal value: ${e}.`,invalidNull:r=>`${r} must be null.`,invalidUndefined:r=>`${r} must be undefined.`,invalidOptional:r=>`${r} must be optional.`,invalidNullable:r=>`${r} must be nullable.`,invalidPromise:r=>`${r} must be a promise.`,invalidFunction:r=>`${r} must be a function.`,invalidClass:r=>`${r} must be a class.`,invalidUnknown:r=>`${r} must be unknown.`,invalidNever:r=>`${r} must be never.`,invalidVoid:r=>`${r} must be void.`,invalidAny:r=>`${r} must be any.`,invalidUnknownKeys:r=>`${r} must have unknown keys.`,invalidFile:r=>`${r} must be a file.`,invalidFileSize:(r,e)=>`${r} must not exceed ${e} bytes.`,invalidFileType:(r,e)=>`${r} must be of type ${e}.`,invalidUpperCase:r=>`${r} must be at least one upper case.`,invalidLowerCase:r=>`${r} must be at least one lower case.`,invalidNumericCase:r=>`${r} must be at least one number.`,invalidPhoneNumber:r=>`${r} must be a valid phone number.`,invalidUsername:r=>`${r} must contain only letters, numbers, and underscores.`,invalidUsernameOrEmail:r=>`${r} must be a valid username or email address.`}}};var l=r=>z$1.string({required_error:c.error.required.fieldIsRequired(r),invalid_type_error:c.error.invalid.invalidString(r)}).min(1,c.error.required.fieldIsRequired(r));var ie=r=>z$1.number({required_error:c.error.required.fieldIsRequired(r),invalid_type_error:c.error.invalid.invalidNumber(r)}).min(1,c.error.required.fieldIsRequired(r)).int().positive();var B=(r,e)=>z$1.enum(e,{required_error:c.error.required.fieldIsRequired(r),invalid_type_error:c.error.invalid.invalidEnum(r,e)});z$1.string({required_error:c.error.required.fieldIsRequired("Username")}).min(1,c.error.required.fieldIsRequired("Username")).max(20,c.error.limit.stringMax("Username",20)).regex(new RegExp("^[a-zA-Z0-9_]*$"),c.error.invalid.invalidUsername("Username"));var ne=z$1.string({required_error:c.error.required.fieldIsRequired("Email")}).min(1,c.error.required.fieldIsRequired("Email")).email(c.error.invalid.invalidEmail("Email"));var ze=z$1.string({required_error:c.error.required.fieldIsRequired("Username or email"),invalid_type_error:c.error.invalid.invalidString("Username or email")}).min(1,c.error.required.fieldIsRequired("Username or email")).max(255,c.error.limit.numberMax("Username or email",255)).refine(r=>{let e=/^[^\s@]+@[^\s@]+\.[^\s@]+$/,s=/^[a-zA-Z0-9_]*$/;return r.includes("@")?e.test(r):s.test(r)&&r.length>=1&&r.length<=20},c.error.invalid.invalidUsernameOrEmail("Username or email")),ve=z$1.string({required_error:c.error.required.fieldIsRequired("Password")}).min(1,c.error.required.fieldIsRequired("Password")).min(6,c.error.limit.stringMin("Password",6)).regex(new RegExp(".*[A-Z].*"),c.error.invalid.invalidUpperCase("Password")).regex(new RegExp(".*[a-z].*"),c.error.invalid.invalidLowerCase("Password")).regex(new RegExp(".*\\d.*"),c.error.invalid.invalidNumericCase("Password")),Ke=z$1.string({required_error:c.error.required.fieldIsRequired("New Password")}).min(1,c.error.required.fieldIsRequired("New Password")).min(6,c.error.limit.stringMin("New Password",6)).regex(new RegExp(".*[A-Z].*"),c.error.invalid.invalidUpperCase("New Password")).regex(new RegExp(".*[a-z].*"),c.error.invalid.invalidLowerCase("New Password")).regex(new RegExp(".*\\d.*"),c.error.invalid.invalidNumericCase("New Password"));z$1.string({required_error:c.error.required.fieldIsRequired("Confirm Password")}).min(1,c.error.required.fieldIsRequired("Confirm Password")).min(6,c.error.limit.stringMin("Confirm Password",6)).regex(new RegExp(".*[A-Z].*"),c.error.invalid.invalidUpperCase("Confirm Password")).regex(new RegExp(".*[a-z].*"),c.error.invalid.invalidLowerCase("Confirm Password")).regex(new RegExp(".*\\d.*"),c.error.invalid.invalidNumericCase("Confirm Password"));var Be=r=>z$1.boolean({required_error:c.error.required.fieldIsRequired(r),invalid_type_error:c.error.invalid.invalidBoolean(r)});z$1.object({metaTitle:l("Meta Title").max(255,"Meta Title is too long").optional(),metaDescription:l("Meta Description").max(500,"Meta Description is too long").optional(),metaKeywords:l("Meta Keywords").optional(),metaThumbnailId:ie("Meta Thumbnail ID").optional()});var Ve=z$1.object({usernameOrEmail:ze,password:l("Password")}),Ge=z$1.object({email:ne}),He=z$1.object({email:ne,otp:ie("OTP"),verificationMethod:B("Verification Method",I.enumValues)}),We=z$1.object({email:ne,otp:ie("OTP"),password:ve});z$1.object({oldPassword:ve,newPassword:Ke});var Y=class extends x{async retrieveEmailTemplate(e){try{let s=await this.db.query.emailTemplates.findFirst({where:eq(me.name,e)});return s?i.createResponse(StatusCodes.OK,"Email template retrieved successfully",s):i.createRejectResponse(StatusCodes.NOT_FOUND,"Email template not found")}catch(s){return i.createErrorResponse(s)}}};var V=class{request;response;apiResponse;constructor(e,s){this.request=e,this.response=s,this.apiResponse=new b(s);}};var Z=class extends x{async limitOTPRequest(e,s,t){try{let o=await this.getDb().query.verificationToken.findFirst({where:and(eq(w.identifier,e.email),eq(w.tokenType,s))}),n=new Date().getTime(),a=new Date(o?.updatedAt).getTime(),f=n-a,u=Math.floor(f/6e4);if(o&&u<t){let E=`You can only request OTP per ${t} minute(s). Please wait for ${t-u} minute(s)`;return i.createRejectResponse(StatusCodes.TOO_MANY_REQUESTS,E)}return Promise.resolve(!0)}catch(o){return i.createErrorResponse(o)}}async saveOTPToDatabase(e,s,t=Number(process.env.OTP_RESET_EXPIRY)){try{if(!e.email)return i.createRejectResponse(StatusCodes.NOT_FOUND,"Email is not registered");let o=new Date,n=new Date(o.getTime()+t*6e4);await this.limitOTPRequest(e,s,t);let a=h.OTPGenerator(6),f=$e.hashSync(String(a),10);return await this.getDb().insert(w).values({identifier:e.email,token:f,tokenType:s,expires:n}).onConflictDoUpdate({target:[w.identifier,w.tokenType],set:{token:f,expires:n}}),Promise.resolve(a)}catch(o){return i.createErrorResponse(o)}}async verifyOTPFromDatabase(e,s,t){try{let o=await this.getDb().query.verificationToken.findFirst({where:and(eq(w.identifier,e.email),eq(w.tokenType,t))});return o&&o.token&&!$e.compareSync(s,o.token)?i.createRejectResponse(StatusCodes.BAD_REQUEST,"Invalid OTP"):o?o?.expires&&o.expires<new Date?(await this.deleteOTPFromDatabase(e,t),i.createRejectResponse(StatusCodes.REQUEST_TIMEOUT,"OTP expired")):Promise.resolve(!0):i.createRejectResponse(StatusCodes.BAD_REQUEST,"Invalid OTP")}catch(o){return i.createErrorResponse(o)}}async deleteOTPFromDatabase(e,s){try{return await this.getDb().delete(w).where(and(eq(w.identifier,e.email),eq(w.tokenType,s))),Promise.resolve(!0)}catch(t){return i.createErrorResponse(t)}}};var A=class extends V{authenticationService;otpService;emailTemplateService;constructor(e,s){super(e,s),this.authenticationService=new U,this.otpService=new Z,this.emailTemplateService=new Y;}async getSession(){let{user:e}=this.request;return e?this.apiResponse.successResponse("Authorized",e):this.apiResponse.successResponse("No session found")}async verifyOTP(){let{body:e}=this.request,s=He.safeParse(e);if(!s.success)return this.apiResponse.badResponse(s.error.errors.map(o=>o.message).join(" "));let t=await this.authenticationService.findUserByEmail(s.data.email);return await this.otpService.verifyOTPFromDatabase(t.data,String(s.data.otp),s.data.verificationMethod),this.apiResponse.successResponse("OTP verified successfully")}async login(){let{body:e}=this.request,s=Ve.safeParse(e);if(!s.success)return this.apiResponse.badResponse(s.error.errors.map(a=>a.message).join(" "));let t=await this.authenticationService.findUserByUsernameOrEmail(s.data.usernameOrEmail);await this.authenticationService.checkAccountVerification(t.data.id),await this.authenticationService.passwordChecker(s.data.password,t.data.password);let{password:o,...n}=t.data;this.request.login(t.data,a=>a?this.apiResponse.sendResponse({status:StatusCodes.INTERNAL_SERVER_ERROR,message:"Login failed"}):this.apiResponse.successResponse("Login successful",n));}async logout(){this.request.session.destroy(e=>e?this.apiResponse.sendResponse({status:StatusCodes.INTERNAL_SERVER_ERROR,message:"Error logging out"}):(this.response.clearCookie(process.env.SESSION_COOKIE_NAME),this.apiResponse.successResponse("Logged out")));}async resetPasswordOTPRequest(){let{body:e}=this.request,s=Ge.safeParse(e);if(!s.success)return this.apiResponse.badResponse(s.error.errors.map(n=>n.message).join(" "));let t=await this.authenticationService.findUserByEmail(e.email),o=await this.otpService.saveOTPToDatabase(t.data,I.PASSWORD_RESET);if(o&&t.data.email){await this.emailTemplateService.retrieveEmailTemplate("password_reset");}return process.env.SHOW_OTP?(console.log(`OTP for user ${t.data.username}: ${o}`),this.apiResponse.successResponse("OTP sent to your email",{otp:o,otpExpirationTime:Number(process.env.OTP_RESET_EXPIRY)})):this.apiResponse.successResponse("Password reset OTP sent",{otpExpirationTime:Number(process.env.OTP_RESET_EXPIRY)})}async resetPasswordConfirm(){let{body:e}=this.request,s=We.safeParse(e);if(!s.success)return this.apiResponse.badResponse(s.error.errors.map(o=>o.message).join(", "));let t=await this.authenticationService.findUserByEmail(s.data.email);return await this.otpService.verifyOTPFromDatabase(t.data,String(s.data.otp),I.PASSWORD_RESET),await this.otpService.deleteOTPFromDatabase(t.data,I.PASSWORD_RESET),await this.authenticationService.changePassword(t.data.id,s.data.password),this.apiResponse.successResponse("User password reset")}};function Gr(r,e,s,t){let o=new b(s);if(Wr(r,e),r instanceof ZodError){Yr(r,o);return}if(r.name==="ValidationError"){Jr(r,o);return}if(r.name==="CastError"){Zr(r,o);return}if(r.name==="MongoError"||r.name==="MongoServerError"){Qr(r,o);return}if(r.code==="ECONNREFUSED"){Xr(r,o);return}if(r.name==="JsonWebTokenError"){es(r,o);return}if(r.name==="TokenExpiredError"){rs(r,o);return}if(r.name==="SyntaxError"&&r.message.includes("JSON")){ss(r,o);return}if(r.code==="LIMIT_FILE_SIZE"){ts(r,o);return}if(r.code==="EBADCSRFTOKEN"){os(r,o);return}if(r.status||r.statusCode){is(r,o);return}ns(r,o);}function Hr(r,e){new b(e).sendResponse({status:StatusCodes.NOT_FOUND,message:`Route ${r.method} ${r.originalUrl} not found`});}function y(r){return (e,s,t)=>{Promise.resolve(r(e,s,t)).catch(t);}}function Qe(r){r.use(Hr),r.use(Gr);}function Wr(r,e){let s=new Date().toISOString(),t=e.method,o=e.originalUrl,n=e.get("User-Agent")||"Unknown",a=e.ip||e.socket.remoteAddress||"Unknown";console.error(m.red("=".repeat(80))),console.error(m.red(`\u{1F6A8} ERROR OCCURRED AT: ${s}`)),console.error(m.yellow(`\u{1F4DD} REQUEST: ${t} ${o}`)),console.error(m.cyan(`\u{1F310} IP: ${a}`)),console.error(m.cyan(`\u{1F50D} User-Agent: ${n}`)),console.error(m.red(`\u274C ERROR NAME: ${r.name||"Unknown"}`)),console.error(m.red(`\u{1F4AC} ERROR MESSAGE: ${r.message||"No message"}`)),r.stack&&(console.error(m.gray("\u{1F4DA} STACK TRACE:")),console.error(m.gray(r.stack))),console.error(m.red("=".repeat(80)));}function Yr(r,e){let s=r.errors.map(t=>({field:t.path.join("."),message:t.message}));e.sendResponse({status:StatusCodes.BAD_REQUEST,message:"Validation failed",data:{errors:s}});}function Jr(r,e){let s=Object.values(r.errors||{}).map(t=>({field:t.path,message:t.message}));e.sendResponse({status:StatusCodes.BAD_REQUEST,message:"Validation failed",data:{errors:s}});}function Zr(r,e){e.badResponse(`Invalid ${r.path}: ${r.value}`);}function Qr(r,e){if(r.code===11e3){let s=Object.keys(r.keyValue||{})[0];e.sendResponse({status:StatusCodes.CONFLICT,message:`Duplicate value for field: ${s}`});return}e.internalServerError("Database operation failed");}function Xr(r,e){e.sendResponse({status:StatusCodes.SERVICE_UNAVAILABLE,message:"Database connection failed. Please try again later."});}function es(r,e){e.unauthorizedResponse("Invalid authentication token");}function rs(r,e){e.unauthorizedResponse("Authentication token has expired");}function ss(r,e){e.badResponse("Invalid JSON format in request body");}function ts(r,e){e.badResponse("File size exceeds the allowed limit");}function os(r,e){e.forbiddenResponse("Invalid CSRF token. Perhaps your browser blocked 3rd-party cookies. Please allow 3rd-party cookies or try a different browser. If the problem persists, please contact support.");}function is(r,e){let s=r.status||r.statusCode||StatusCodes.INTERNAL_SERVER_ERROR,t=r.message||"An error occurred";e.sendResponse({status:s,message:t});}function ns(r,e){e.sendResponse({status:StatusCodes.INTERNAL_SERVER_ERROR,message:"Something went wrong. Please try again later."});}function Xe(){process.on("uncaughtException",r=>{console.error(m.red("\u{1F6A8} UNCAUGHT EXCEPTION:")),console.error(m.red(r.name+": "+r.message)),console.error(m.gray(r.stack)),console.log(m.yellow("\u{1F504} Attempting graceful shutdown...")),process.exit(1);}),process.on("unhandledRejection",(r,e)=>{console.error(m.red("\u{1F6A8} UNHANDLED PROMISE REJECTION:")),console.error(m.red("Reason:"),r),console.error(m.yellow("Promise:"),e),console.log(m.yellow("\u{1F504} Attempting graceful shutdown...")),process.exit(1);}),process.on("SIGTERM",()=>{console.log(m.yellow("\u{1F6D1} SIGTERM received. Starting graceful shutdown...")),process.exit(0);}),process.on("SIGINT",()=>{console.log(m.yellow("\u{1F6D1} SIGINT received. Starting graceful shutdown...")),process.exit(0);});}var as=process.env.SESSION_COOKIE_NAME,cs=async(r,e,s)=>{let t=new b(e);if(!r.isAuthenticated()){e.clearCookie(as),t.unauthorizedResponse("Unauthorized: Not authenticated");return}s();},$=y(cs);var er=(()=>{let r=Pe.Router();return r.get("/me",y(async(e,s)=>{await new A(e,s).getSession();})),r.post("/verify-otp",y(async(e,s)=>{await new A(e,s).verifyOTP();})),r.post("/login",y(async(e,s)=>{await new A(e,s).login();})),r.post("/reset-password/request",y(async(e,s)=>{await new A(e,s).resetPasswordOTPRequest();})),r.post("/reset-password/confirm",y(async(e,s)=>{await new A(e,s).resetPasswordConfirm();})),r.post("/logout",$,y(async(e,s)=>{await new A(e,s).logout();})),r})();var Q=class extends x{constructor(){super(),v2.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET});}managedData(e){return {src:e.secure_url,alt:e.alt,mimeType:e.resource_type,size:e.bytes,additionalData:{public_id:e.public_id,format:e.format,secure_url:e.secure_url,resource_type:e.resource_type}}}async saveToDatabase(e){try{if(Array.isArray(e)){let s=await this.getDb().insert(S).values(e).returning();return Promise.resolve(s)}else {let s=await this.getDb().insert(S).values(e).returning();return Promise.resolve(s)}}catch(s){return i.createErrorResponse(s)}}async uploadSingleFile(e,s){let t=await s.file.arrayBuffer(),o=Buffer.from(t);return new Promise((n,a)=>{v2.uploader.upload_stream({resource_type:"auto",folder:e},(f,u)=>{if(f)return a(f);if(u){let E={...u,alt:s.alt};return n(E)}else return a(new Error("Upload failed: No result returned"))}).end(o);})}async deleteUploadedFile(e){return new Promise(async(s,t)=>{try{let o=await v2.uploader.destroy(e);return s(o)}catch(o){t(new Error(o.message));}})}async deleteUploadedFiles(e){return Promise.all(e.map(s=>this.deleteUploadedFile(s)))}async retrieve(){try{let e=await this.db.query.media.findMany({orderBy:desc(S.createdAt)});return i.createResponse(StatusCodes.OK,"Media retrieved successfully",e)}catch(e){return i.createErrorResponse(e)}}async uploadFile(e,s){let t=s.map(async o=>{let n=await this.uploadSingleFile(e,o);return this.managedData(n)});return Promise.all(t)}async uploadFiles(e){try{let s=await this.uploadFile("Media Library",e),t=await this.saveToDatabase(s);return i.createResponse(StatusCodes.OK,"File uploaded successfully",t)}catch(s){return i.createErrorResponse(s)}}async updateFileName(e,s){try{let t=await this.getDb().update(S).set({alt:s}).where(eq(S.id,e)).returning().then(o=>o[0]);return i.createResponse(StatusCodes.OK,"File name updated successfully",t)}catch(t){return i.createErrorResponse(t)}}async deleteFile(e){try{let s=await this.getDb().delete(S).where(eq(S.id,e)).returning().then(t=>t[0]);return this.deleteUploadedFile(s.additionalData.public_id),i.createResponse(StatusCodes.OK,"File deleted successfully",s)}catch(s){return i.createErrorResponse(s)}}async deleteFileByUrl(e){try{let s=await this.getDb().delete(S).where(eq(S.src,e)).returning();return s.length===0?i.createRejectResponse(StatusCodes.NOT_FOUND,"File not found"):(await this.deleteUploadedFile(s[0].additionalData.public_id),i.createResponse(StatusCodes.OK,"File deleted successfully",s))}catch(s){return i.createErrorResponse(s)}}async deleteFilesByUrls(e){try{let s=await this.getDb().delete(S).where(inArray(S.src,e)).returning();return s.length===0?i.createRejectResponse(StatusCodes.NOT_FOUND,"Files not found"):(await Promise.all(s.map(t=>this.deleteUploadedFile(t.additionalData.public_id))),i.createResponse(StatusCodes.OK,"Files deleted successfully",s))}catch(s){return i.createErrorResponse(s)}}};var D=class extends V{mediaService;acceptableTypes=["image/jpeg","image/jpg","image/png","image/gif","image/webp"];constructor(e,s){super(e,s),this.mediaService=new Q;}async index(){let e=await this.mediaService.retrieve();return this.apiResponse.sendResponse(e)}async upload(){let e=this.request.files;if(!e||e.length===0)return this.apiResponse.badResponse("No files uploaded");let s=e.map(a=>({file:new File([a.buffer],a.originalname,{type:a.mimetype}),alt:a.originalname})),t=await this.mediaService.uploadFiles(s),o=t.data?.map(a=>({src:a.src,alt:a.alt,success:true}))||[],n=t.data.map(a=>{let f=a.mimeType,u=a.alt.replace(/\.[^/.]+$/,"");return {fileName:u,success:true,fileData:{name:u,size:a.size,type:f}}});return this.apiResponse.successResponse(`${o.length} file${o.length!==1?"s":""} uploaded successfully`,n)}async updateName(){let{params:e,body:s}=this.request;if(!s.name)return this.apiResponse.badResponse("Name is required for updating media");let t=await this.mediaService.updateFileName(Number(e.id),s.name);return this.apiResponse.sendResponse(t)}async delete(){let{params:e}=this.request,s=await this.mediaService.deleteFile(Number(e.id));return this.apiResponse.sendResponse(s)}};var fs=ms(),rr=(()=>{let r=Pe.Router();return r.route("").get($,y(async(e,s)=>{await new D(e,s).index();})).post($,fs.any(),y(async(e,s)=>{await new D(e,s).upload();})),r.route("/:id").put($,y(async(e,s)=>{await new D(e,s).updateName();})).delete($,y(async(e,s)=>{await new D(e,s).delete();})),r})();var{generateCsrfToken:sr,validateRequest:Yo,doubleCsrfProtection:tr,invalidCsrfTokenError:Jo}=doubleCsrf({getSecret:()=>process.env.SECRET,getSessionIdentifier:()=>process.env.SECRET,cookieName:"csrf-token",cookieOptions:{maxAge:36e5,sameSite:h.sameSiteCookieConfig().sameSite,secure:h.sameSiteCookieConfig().secure,...h.sameSiteCookieConfig().domain&&{domain:h.sameSiteCookieConfig().domain}},size:32,errorConfig:{message:"Invalid CSRF token. Perhaps your browser blocked 3rd-party cookies. Please allow 3rd-party cookies or try a different browser. If the problem persists, please contact support.",statusCode:403},getCsrfTokenFromRequest:r=>r.headers["x-csrf-token"]});var or=(()=>{let r=Pe.Router();return r.get("",y(async(e,s)=>{let t=sr(e,s);new b(s).successResponse("CSRF token generated",t);})),r})();var ir=[{path:"/csrf-token",router:or},{path:"/auth",router:er},{path:"/media",router:rr}];function Oe(r,e=""){let s=[];for(let{path:t,router:o}of ir){let n=`${e}${t}`;r.use(n,o),o.stack.forEach(a=>{a.route&&Object.keys(a.route.methods).forEach(u=>{s.push({method:u.toUpperCase(),path:`${n}${a.route.path}`});});});}}var nr={origin:function(r,e){!r||process.env.ORIGIN_URL.split(",").includes(r)?e(null,true):e(new Error("Not allowed by CORS"));},credentials:true,methods:["GET","POST","PUT","DELETE"],allowedHeaders:["Content-Type","Authorization","x-csrf-token","ngrok-skip-browser-warning"],maxAge:3600};function xe(r){r.use((e,s,t)=>{let{method:o,url:n}=e,a=Date.now();console.log(`${m.green("\u2713")} ${o} ${n}`),s.on("finish",()=>{let f=Date.now()-a,u=s.statusCode,E;u>=500?E=m.red(u.toString()):u>=400?E=m.yellow(u.toString()):u>=300?E=m.cyan(u.toString()):u>=200?E=m.green(u.toString()):E=m.red("500"),console.log(`${m.green("\u2713")} ${o} ${n} ${E} in ${f}ms`);}),t();});}function be(r){let e=ys({windowMs:9e5,max:100,message:"Too many requests, please try again later."});r.use(e);}var X=class extends Store{async get(e,s){try{let t=await M.select().from(v).where(eq(v.sessionId,e)).execute();if(!t||t.length===0)return s(null,null);let o=t[0];return new Date(o.expires)<new Date?(await this.destroy(e),s(null,null)):s(null,JSON.parse(o.sessionCookie))}catch(t){return s(t)}}async set(e,s,t){try{if(!s)return t?.();let o=JSON.stringify(s),n=s.cookie.expires||new Date(Date.now()+6048e5),a=s?.passport?.user||null;await M.insert(v).values({sessionId:e,sessionCookie:o,userId:a,expires:n}).onConflictDoUpdate({target:v.sessionId,set:{sessionCookie:o,userId:a,expires:n}}).returning(),t?.();}catch(o){t?.(o);}}async destroy(e,s){try{await M.delete(v).where(eq(v.sessionId,e)).execute(),s?.();}catch(t){s?.(t);}}async touch(e,s,t){try{let o=s.cookie.expires||new Date(Date.now()+6048e5);await M.update(v).set({expires:o}).where(eq(v.sessionId,e)).execute(),t?.();}catch{t?.();}}};var Ss=vs({name:process.env.SESSION_COOKIE_NAME,secret:process.env.SECRET,saveUninitialized:false,resave:false,store:new X,cookie:{sameSite:h.sameSiteCookieConfig().sameSite,secure:h.sameSiteCookieConfig().secure,maxAge:6048e5,...h.sameSiteCookieConfig().domain&&{domain:h.sameSiteCookieConfig().domain}}}),ar=Ss;var ws=(r,e,s)=>{let t=r.secure?"https":"http",o=r.headers.origin||r.headers.referer||"Unknown",n=o!=="Unknown"?new URL(o.toString()).origin:"Unknown",a=r.headers.host?`${t}://${r.headers.host}`:"Unknown";z.setClientDomain(n),z.setServerDomain(a),s();},cr=ws;Dr.config();var g=Pe();g.use(_s());g.use(Pe.json());g.use(urlencoded({extended:true}));g.use(Pe.urlencoded({extended:true}));g.use(Ts());g.use(Os(nr));xe(g);be(g);g.use(cr);g.set("trust proxy",1);g.use(ar);g.use(he.initialize());g.use(he.session());g.use(tr);Ee(g);Oe(g);Qe(g);var lr=g;var Ns=z$1.object({EMAIL_SERVER_HOST:l("EMAIL_SERVER_HOST"),EMAIL_SERVER_PORT:l("EMAIL_SERVER_PORT"),EMAIL_SERVER_USER:l("EMAIL_SERVER_USER"),EMAIL_SERVER_PASSWORD:l("EMAIL_SERVER_PASSWORD"),EMAIL_FROM:l("EMAIL_FROM")}),As=z$1.object({GOOGLE_CLIENT_ID:l("GOOGLE_CLIENT_ID"),GOOGLE_CLIENT_SECRET:l("GOOGLE_CLIENT_SECRET"),GOOGLE_CALLBACK_URL:l("GOOGLE_CALLBACK_URL")}),Us=z$1.object({DATABASE_URL:l("DATABASE_URL"),PORT:l("PORT").refine(r=>!isNaN(Number(r)),"PORT must be a number"),SECRET:l("SECRET"),NODE_ENV:B("NODE_ENV",["development","production"]),SESSION_COOKIE_NAME:l("SESSION_COOKIE_NAME"),ORIGIN_URL:l("ORIGIN_URL"),COOKIE_SETTINGS:B("COOKIE_SETTINGS",["locally","globally"]),COOKIE_DOMAIN:l("COOKIE_DOMAIN"),COOKIE_SAME_SITE:B("COOKIE_SAME_SITE",["lax","strict","none"]),OTP_RESET_EXPIRY:l("OTP_RESET_EXPIRY").refine(r=>!isNaN(Number(r)),"OTP_RESET_EXPIRY must be a number"),SHOW_OTP:l("SHOW_OTP").refine(r=>Be(r)?true:"SHOW_OTP must be a boolean value (true or false)"),API_URL:l("API_URL"),...Ns.shape,...As.shape}),ur=Us.safeParse(process.env);if(!ur.success){let r=ur.error.errors.map(e=>e.message).join(`
`);console.error(m.red(`Environment validation failed:
${r}`)),process.exit(1);}var Is=()=>{try{let r=join(process.cwd(),"package.json"),e=JSON.parse(readFileSync(r,"utf-8")),s=e.dependencies?.express||e.devDependencies?.express;if(s)return s.replace(/[\^~<>=\s]/g,"");let t=join(process.cwd(),"node_modules/express/package.json");return JSON.parse(readFileSync(t,"utf-8")).version}catch{return "unknown"}},fr=Is;var ks=fr();Xe();var qs=async()=>{try{let r=process.env.PORT||8080,e=Cs.address(),s="production";lr.listen(r,()=>{console.log(m.magenta(`
\u25B2 Express.js ${ks}`)),console.log(`- Local:        http://localhost:${r}`),console.log(`- Network:      http://${e}:${r}`),console.log(`- Environment:  ${s}`),console.log();});}catch(r){console.error("Failed to start server:",r),process.exit(1);}};qs();